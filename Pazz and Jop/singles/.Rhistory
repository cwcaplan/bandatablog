album=albums,
votes=pjsM$V3,
year=pjsM$year,
stringsAsFactors=F)
View(pjsM)
setwd("C:/Users/Seth/Documents/bandatablog/Pazz and Jop/singles")
#got info from
#1979-2007
#http://www.robertchristgau.com/xg/pnj/index.php
#2008-present
#http://www.villagevoice.com/pazznjop/singles/2008
### 1974-2007 (the rest is below)
pj <- list()
pjsM <- data.frame()
year <- "1978"
for (i in 1:29) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
pj[[i]] <- read.delim(paste("pj singles ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#deal with erroneous bump overs
for (k in 1:nrow(pj[[i]])) {
if(grepl("[^0-9\\.]", pj[[i]][k,1])) {
pj[[i]][k,4] <- pj[[i]][k,3]
pj[[i]][k,3] <- pj[[i]][k,2]
pj[[i]][k,2] <- pj[[i]][k,1]
pj[[i]][k,1] <- as.character(as.numeric(pj[[i]][k-1,1])+1)
}
}
#deal with ties
for (j in 1:nrow(pj[[i]])) {
if(!grepl("[0-9]", pj[[i]][j,1])) {
pj[[i]][j,4] <- pj[[i]][j,3]
pj[[i]][j,3] <- pj[[i]][j,2]
pj[[i]][j,2] <- pj[[i]][j,1]
pj[[i]][j,1] <- pj[[i]][j-1,1]
}
}
#deal with asterisks
pj[[i]] <- pj[[i]][,1:3]
#add year
pj[[i]]$year <- year
#add to master list
pjsM <- rbind(pjsM, pj[[i]])
}
#get rid of rogue asterisks
pjsM[571,2] <- "Nelly: (Hot Shit) Country Grammar (Universal)"
pjsM <- pjsM[!grepl("\\*", pjsM$V2),]
#split artist and album columns
albums <- character()
for (i in 1:nrow(pjsM)) {
if(grepl(":", pjsM[i,2])) {
info <- unlist(strsplit(pjsM[i,2], ": "))
pjsM[i,2] <- info[1]
albums[i] <- info[2]
} else {
albums[i] <- pjsM[i,2]
}
}
pjsM <- data.frame(rank=pjsM$V1,
artist=pjsM$V2,
album=albums,
votes=pjsM$V3,
year=pjsM$year,
stringsAsFactors=F)
View(pjsM)
setwd("C:/Users/Seth/Documents/bandatablog/Pazz and Jop/singles")
#got info from
#1979-2007
#http://www.robertchristgau.com/xg/pnj/index.php
#2008-present
#http://www.villagevoice.com/pazznjop/singles/2008
### 1974-2007 (the rest is below)
pj <- list()
pjsM <- data.frame()
year <- "1978"
for (i in 1:29) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
pj[[i]] <- read.delim(paste("pj singles ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#deal with erroneous bump overs
for (k in 1:nrow(pj[[i]])) {
if(grepl("[^0-9\\.]", pj[[i]][k,1])) {
pj[[i]][k,4] <- pj[[i]][k,3]
pj[[i]][k,3] <- pj[[i]][k,2]
pj[[i]][k,2] <- pj[[i]][k,1]
pj[[i]][k,1] <- as.character(as.numeric(pj[[i]][k-1,1]))
}
}
#deal with ties
for (j in 1:nrow(pj[[i]])) {
if(!grepl("[0-9]", pj[[i]][j,1])) {
pj[[i]][j,4] <- pj[[i]][j,3]
pj[[i]][j,3] <- pj[[i]][j,2]
pj[[i]][j,2] <- pj[[i]][j,1]
pj[[i]][j,1] <- pj[[i]][j-1,1]
}
}
#deal with asterisks
pj[[i]] <- pj[[i]][,1:3]
#add year
pj[[i]]$year <- year
#add to master list
pjsM <- rbind(pjsM, pj[[i]])
}
#get rid of rogue asterisks
pjsM[571,2] <- "Nelly: (Hot Shit) Country Grammar (Universal)"
pjsM <- pjsM[!grepl("\\*", pjsM$V2),]
#split artist and album columns
albums <- character()
for (i in 1:nrow(pjsM)) {
if(grepl(":", pjsM[i,2])) {
info <- unlist(strsplit(pjsM[i,2], ": "))
pjsM[i,2] <- info[1]
albums[i] <- info[2]
} else {
albums[i] <- pjsM[i,2]
}
}
pjsM <- data.frame(rank=pjsM$V1,
artist=pjsM$V2,
album=albums,
votes=pjsM$V3,
year=pjsM$year,
stringsAsFactors=F)
View(pjsM)
setwd("C:/Users/Seth/Documents/bandatablog/Pazz and Jop/singles")
#got info from
#1979-2007
#http://www.robertchristgau.com/xg/pnj/index.php
#2008-present
#http://www.villagevoice.com/pazznjop/singles/2008
### 1974-2007 (the rest is below)
pj <- list()
pjsM <- data.frame()
year <- "1978"
for (i in 1:29) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
pj[[i]] <- read.delim(paste("pj singles ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#deal with erroneous bump overs
for (k in 1:nrow(pj[[i]])) {
if(grepl("[^0-9\\.]", pj[[i]][k,1])) {
pj[[i]][k,4] <- pj[[i]][k,3]
pj[[i]][k,3] <- pj[[i]][k,2]
pj[[i]][k,2] <- pj[[i]][k,1]
pj[[i]][k,1] <- as.character(as.numeric(pj[[i]][k-1,1]))
}
}
#deal with ties
for (j in 1:nrow(pj[[i]])) {
if(!grepl("[0-9]", pj[[i]][j,1])) {
pj[[i]][j,4] <- pj[[i]][j,3]
pj[[i]][j,3] <- pj[[i]][j,2]
pj[[i]][j,2] <- pj[[i]][j,1]
pj[[i]][j,1] <- pj[[i]][j-1,1]
}
}
#deal with asterisks
pj[[i]] <- pj[[i]][,1:3]
#add year
pj[[i]]$year <- year
#add to master list
pjsM <- rbind(pjsM, pj[[i]])
}
#get rid of rogue asterisks
pjsM[571,2] <- "Nelly: (Hot Shit) Country Grammar (Universal)"
pjsM <- pjsM[!grepl("\\*", pjsM$V2),]
#split artist and album columns
albums <- character()
for (i in 1:nrow(pjsM)) {
if(grepl(":", pjsM[i,2])) {
info <- unlist(strsplit(pjsM[i,2], ": "))
pjsM[i,2] <- info[1]
albums[i] <- info[2]
} else {
albums[i] <- pjsM[i,2]
}
}
pjsM <- data.frame(rank=numeric(pjsM$V1),
artist=pjsM$V2,
album=albums,
votes=pjsM$V3,
year=pjsM$year,
stringsAsFactors=F)
setwd("C:/Users/Seth/Documents/bandatablog/Pazz and Jop/singles")
#got info from
#1979-2007
#http://www.robertchristgau.com/xg/pnj/index.php
#2008-present
#http://www.villagevoice.com/pazznjop/singles/2008
### 1974-2007 (the rest is below)
pj <- list()
pjsM <- data.frame()
year <- "1978"
for (i in 1:29) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
pj[[i]] <- read.delim(paste("pj singles ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#deal with erroneous bump overs
for (k in 1:nrow(pj[[i]])) {
if(grepl("[^0-9\\.]", pj[[i]][k,1])) {
pj[[i]][k,4] <- pj[[i]][k,3]
pj[[i]][k,3] <- pj[[i]][k,2]
pj[[i]][k,2] <- pj[[i]][k,1]
pj[[i]][k,1] <- as.character(as.numeric(pj[[i]][k-1,1]))
}
}
#deal with ties
for (j in 1:nrow(pj[[i]])) {
if(!grepl("[0-9]", pj[[i]][j,1])) {
pj[[i]][j,4] <- pj[[i]][j,3]
pj[[i]][j,3] <- pj[[i]][j,2]
pj[[i]][j,2] <- pj[[i]][j,1]
pj[[i]][j,1] <- pj[[i]][j-1,1]
}
}
#deal with asterisks
pj[[i]] <- pj[[i]][,1:3]
#add year
pj[[i]]$year <- year
#add to master list
pjsM <- rbind(pjsM, pj[[i]])
}
#get rid of rogue asterisks
pjsM[571,2] <- "Nelly: (Hot Shit) Country Grammar (Universal)"
pjsM <- pjsM[!grepl("\\*", pjsM$V2),]
#split artist and album columns
albums <- character()
for (i in 1:nrow(pjsM)) {
if(grepl(":", pjsM[i,2])) {
info <- unlist(strsplit(pjsM[i,2], ": "))
pjsM[i,2] <- info[1]
albums[i] <- info[2]
} else {
albums[i] <- pjsM[i,2]
}
}
pjsM <- data.frame(rank=as.numeric(pjsM$V1),
artist=pjsM$V2,
album=albums,
votes=pjsM$V3,
year=pjsM$year,
stringsAsFactors=F)
View(pjsM)
?strsplit
hog <- "the record (the fire) (capitol)"
hog
sub(".*[.]", "", hog)
sub(".*[\\(]", "", hog)
sub("[\\(].*", "", hog)
strsplit(hog, ".*[\\(]")
hog
strsplit(hog, "[\\(]")
strsplit(hog, "[ \\(]")
strsplit(hog, " [\\(]")
paw <- strsplit(hog, " [\\(]")
paw
paste(paw)
paw <- unlist(strsplit(hog, " [\\(]"))
paw
paste(paw)
paste(paw, collapse= " (")
paw <- character()
boss <- unlist(strsplit(hog, " [\\(]"))
if(length(boss))==2 {
paw[1] <- boss[1]
paw[2] <- boss[2]
} else if (length(boss)>2) {
paw[1] <- paste(boss[1:length(boss)-1], collapse= " (")
paw[2] <- boss[length(boss)]
}
hog
paw <- character()
boss <- unlist(strsplit(hog, " [\\(]"))
if(length(boss)==2) {
paw[1] <- boss[1]
paw[2] <- boss[2]
} else if (length(boss)>2) {
paw[1] <- paste(boss[1:length(boss)-1], collapse= " (")
paw[2] <- boss[length(boss)]
}
paw
setwd("C:/Users/Seth/Documents/bandatablog/Pazz and Jop/singles")
#got info from
#1979-2007
#http://www.robertchristgau.com/xg/pnj/index.php
#2008-present
#http://www.villagevoice.com/pazznjop/singles/2008
### 1974-2007 (the rest is below)
pj <- list()
pjsM <- data.frame()
year <- "1978"
for (i in 1:29) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
pj[[i]] <- read.delim(paste("pj singles ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#deal with erroneous bump overs
for (k in 1:nrow(pj[[i]])) {
if(grepl("[^0-9\\.]", pj[[i]][k,1])) {
pj[[i]][k,4] <- pj[[i]][k,3]
pj[[i]][k,3] <- pj[[i]][k,2]
pj[[i]][k,2] <- pj[[i]][k,1]
pj[[i]][k,1] <- as.character(as.numeric(pj[[i]][k-1,1]))
}
}
#deal with ties
for (j in 1:nrow(pj[[i]])) {
if(!grepl("[0-9]", pj[[i]][j,1])) {
pj[[i]][j,4] <- pj[[i]][j,3]
pj[[i]][j,3] <- pj[[i]][j,2]
pj[[i]][j,2] <- pj[[i]][j,1]
pj[[i]][j,1] <- pj[[i]][j-1,1]
}
}
#deal with asterisks
pj[[i]] <- pj[[i]][,1:3]
#add year
pj[[i]]$year <- year
#add to master list
pjsM <- rbind(pjsM, pj[[i]])
}
#get rid of rogue asterisks
pjsM[571,2] <- "Nelly: (Hot Shit) Country Grammar (Universal)"
pjsM <- pjsM[!grepl("\\*", pjsM$V2),]
#split artist and song columns
songs <- character()
for (i in 1:nrow(pjsM)) {
if(grepl(":", pjsM[i,2])) {
info <- unlist(strsplit(pjsM[i,2], ": "))
pjsM[i,2] <- info[1]
songs[i] <- info[2]
} else {
songs[i] <- pjsM[i,2]
}
}
pjsM <- data.frame(rank=as.numeric(pjsM$V1),
artist=pjsM$V2,
song=songs,
votes=pjsM$V3,
year=pjsM$year,
stringsAsFactors=F)
View(pjsM)
boss <- unlist(strsplit(pjsM$song[i], " \\("))
if(length(boss)==2) {
pjsM$song[i] <- boss[1]
pjsM$label[i] <- boss[2]
} else if (length(boss)>2) {
pjsM$song[i] <- paste(boss[1:length(boss)-1], collapse= " (")
pjsM$label[i] <- boss[length(boss)]
}
pjsM$label <- gsub("\\)", "", pjsM$label)
View(pjsM)
for (i in 1:nrow(pjsM)) {
boss <- unlist(strsplit(pjsM$song[i], " \\("))
if(length(boss)==2) {
pjsM$song[i] <- boss[1]
pjsM$label[i] <- boss[2]
} else if (length(boss)>2) {
pjsM$song[i] <- paste(boss[1:length(boss)-1], collapse= " (")
pjsM$label[i] <- boss[length(boss)]
}
}
pjsM$label <- gsub("\\)", "", pjsM$label)
View(pjsM)
year
year <- as.character(as.numeric(year)+1)
#load data
pjN <- read.delim(paste("pj singles ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
View(pjN)
seq(1,79,2)
pj1 <- pjN[seq(1,79,2),]
View(pj1)
pj2 <- pjN[seq(2,80,2),]
View(pj2)
pj1[,2] <- sub(", ", "~", pj1[,2])
trim.trailing <- function (x) sub("\\s+$", "", x)
for (j in 1:nrow(pj1)) {
both <- unlist(strsplit(pj1[j,2], "~"))
pj1[j,2] <- trim.trailing(both[1])
pj1[j,3] <- trim.trailing(both[2])
}
View(pj1)
maw <- <- data.frame(rank=pj1$V1,
artist=pj1$V2,
album=pj1$V3,
points=pj2$V2,
mentions=pj2$V3,
year=rep(year, nrow(pj1)),
label=pj2$V1,
index=seq(nrow(pjsM)+1, by=1, length.out=40),
stringsAsFactors=F)
maw <- data.frame(rank=pj1$V1,
artist=pj1$V2,
album=pj1$V3,
points=pj2$V2,
mentions=pj2$V3,
year=rep(year, nrow(pj1)),
label=pj2$V1,
index=seq(nrow(pjsM)+1, by=1, length.out=40),
stringsAsFactors=F)
year <- "2007"
for (i in 35:41) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
pjN <- read.delim(paste("pj singles ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#split every other line
pj1 <- pjN[seq(1,79,2),]
pj2 <- pjN[seq(2,80,2),]
#split artist and album
pj1[,2] <- sub(", ", "~", pj1[,2])
trim.trailing <- function (x) sub("\\s+$", "", x)
for (j in 1:nrow(pj1)) {
both <- unlist(strsplit(pj1[j,2], "~"))
pj1[j,2] <- trim.trailing(both[1])
pj1[j,3] <- trim.trailing(both[2])
}
# build data frame for year
pj[[i]] <- data.frame(rank=pj1$V1,
artist=pj1$V2,
album=pj1$V3,
points=pj2$V2,
mentions=pj2$V3,
year=rep(year, nrow(pj1)),
label=pj2$V1,
index=seq(nrow(pjsM)+1, by=1, length.out=40),
stringsAsFactors=F)
# attach to master
pjsM <- rbind(pjsM, pj[[i]])
}
year <- "2007"
for (i in 35:41) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
pjN <- read.delim(paste("pj singles ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#split every other line
pj1 <- pjN[seq(1,79,2),]
pj2 <- pjN[seq(2,80,2),]
#split artist and album
pj1[,2] <- sub(", ", "~", pj1[,2])
trim.trailing <- function (x) sub("\\s+$", "", x)
for (j in 1:nrow(pj1)) {
both <- unlist(strsplit(pj1[j,2], "~"))
pj1[j,2] <- trim.trailing(both[1])
pj1[j,3] <- trim.trailing(both[2])
}
# build data frame for year
pj[[i]] <- data.frame(rank=pj1$V1,
artist=pj1$V2,
song=pj1$V3,
votes=pj2$V2,
year=rep(year, nrow(pj1)),
label=pj2$V1,
#index=seq(nrow(pjsM)+1, by=1, length.out=40),
#stringsAsFactors=F)
# attach to master
pjsM <- rbind(pjsM, pj[[i]])
}
year <- "2007"
for (i in 35:41) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
pjN <- read.delim(paste("pj singles ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#split every other line
pj1 <- pjN[seq(1,79,2),]
pj2 <- pjN[seq(2,80,2),]
#split artist and album
pj1[,2] <- sub(", ", "~", pj1[,2])
trim.trailing <- function (x) sub("\\s+$", "", x)
for (j in 1:nrow(pj1)) {
both <- unlist(strsplit(pj1[j,2], "~"))
pj1[j,2] <- trim.trailing(both[1])
pj1[j,3] <- trim.trailing(both[2])
}
# build data frame for year
pj[[i]] <- data.frame(rank=pj1$V1,
artist=pj1$V2,
song=pj1$V3,
votes=pj2$V2,
year=rep(year, nrow(pj1)),
label=pj2$V1,
#index=seq(nrow(pjsM)+1, by=1, length.out=40),
stringsAsFactors=F)
# attach to master
pjsM <- rbind(pjsM, pj[[i]])
}
View(pjsM)
pjsM$index <- seq(1, nrow(pjsM))
#fixing duplicate indices
dups <- pjsM[duplicated(pjsM$song),]
dupssong <- dups$song
View(dups)
View(dupssong)
View(pjsM[1135:1145,])
View(pjsM[grep("Avand Gardener", pjsM$song),])
View(pjsM[grep("Avant Gardener", pjsM$song),])
