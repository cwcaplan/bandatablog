coM <- read.csv("data/country weekly number ones.csv", stringsAsFactors=F)
coM$date <- as.Date(coM$date, "%Y-%m-%d")
coMnd <- read.csv("data/country no duplicates.csv", stringsAsFactors=F)
coMnd$date <- as.Date(coMnd$date, "%Y-%m-%d")
#Billboard R and B
rbM <- read.csv("data/r and b weekly number ones.csv", stringsAsFactors=F)
rbM$date <- as.Date(rbM$date, "%Y-%m-%d")
rbMnd <- read.csv("data/r and b no duplicates.csv", stringsAsFactors=F)
rbMnd$date <- as.Date(rbMnd$date, "%Y-%m-%d")
##SINGLES
#Hot 100
h1M <- read.csv("data/hot 100 weekly number ones.csv", stringsAsFactors=F)
h1M$date <- as.Date(h1M$date, "%Y-%m-%d")
h1Mnd <- read.csv("data/hot 100 no duplicates.csv", stringsAsFactors=F)
h1Mnd$date <- as.Date(h1Mnd$date, "%Y-%m-%d")
#country singles
cosM <- read.csv("data/country singles weekly number ones.csv", stringsAsFactors=F)
cosM$date <- as.Date(cosM$date, "%Y-%m-%d")
cosMnd <- read.csv("data/country singles no duplicates.csv", stringsAsFactors=F)
cosMnd$date <- as.Date(cosMnd$date, "%Y-%m-%d")
#r and b singles
rbsM <- read.csv("data/r and b singles weekly number ones.csv", stringsAsFactors=F)
rbsM$date <- as.Date(rbsM$date, "%Y-%m-%d")
rbsMnd <- read.csv("data/r and b singles no duplicates.csv", stringsAsFactors=F)
rbsMnd$date <- as.Date(rbsMnd$date, "%Y-%m-%d")
#rock singles
mrsM <- read.csv("data/rock singles weekly number ones.csv", stringsAsFactors=F)
mrsM$date <- as.Date(mrsM$date, "%Y-%m-%d")
mrsMnd <- read.csv("data/rock singles no duplicates.csv", stringsAsFactors=F)
mrsMnd$date <- as.Date(mrsMnd$date, "%Y-%m-%d")
##YEAR STATS
yearStats <- read.csv("data/yearStats.csv", stringsAsFactors=F)
coYearStats <- read.csv("data/coYearStats.csv", stringsAsFactors=F)
rbYearStats <- read.csv("data/rbYearStats.csv", stringsAsFactors=F)
RanGarTayStats <- read.csv("data/RanGarTayStats.csv", stringsAsFactors=F)
h1YearStats <- read.csv("data/h1YearStats.csv", stringsAsFactors=F)
cosYearStats <- read.csv("data/cosYearStats.csv", stringsAsFactors=F)
rbsYearStats <- read.csv("data/rbsYearStats.csv", stringsAsFactors=F)
mrsYearStats <- read.csv("data/mrsYearStats.csv", stringsAsFactors=F)
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(cosM)
str(coM)
str(cosMnd)
str(coMnd)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
chart <- h1M
View(h1M[substr(h1M$date==year),])
year <- 1987
View(h1M[substr(h1M$date==year),])
View(h1M)
year <- "1987"
View(h1M[substr(h1M$date==year),])
View(h1M[substr(h1M$date)==year,])
View(h1M[substr(h1M$date,1,4)==year,])
h1M[1,1]
?date
?as.Date
as.Date(h1M[1,1], "%b %d")
as.Date(h1M[1,1], format="%b %d")
?strptime
format(h1M[1,1], format="%b %d")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
lookAtChart <- function(year, chart) {
if(chart==1) {
chart <- wnoM
chartnd <- wnoMnd
} else if (chart==2) {
chart <- h1M
chartnd <- h1Mnd
} else if (chart==3) {
chart <- coM
chartnd <- coMnd
} else if (chart==4) {
chart <- cosM
chartnd <- cosMnd
} else if (chart==5) {
chart <- rbM
chartnd <- rbMnd
} else if (chart==6) {
chart <- rbsM
chartnd <- rbsMnd
} else if (chart==7) {
chart <- mrsM
chartnd <- mrsMnd
}
yc <- chart[substr(chart$date,1,4)==year,]
#ycprint <- character()
#for (i in 1:nrow(yc)) {
#    ycprint[i] <- paste(format(yc[i,1], format="%b %d"), "\r\n   ",
#                     yc[i,2], "\n   \t- ",
#                     yc[i,3], "\n", sep="")
#}
ycprint <- data.frame()
for (i in 1:nrow(yc)) {
ycprint[i,1] <- format(yc[i,1], format="%b %d")
ycprint[i,2] <- paste(yc[i,2], yc[i,3], sep=" - ")
}
ycprint
}
yaw <- lookAtChart("1987", 1)
View(yaw)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
paw <- c("aww", "naw" "yall")
paw <- c("aww", "naw", "yall")
paw <- c("aww", "naw", "yall")
paw
paste(paw)
paste(paw, collapse=" ")
paste(paw, collapse="<br/>")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(pjM[grep("Santana", pjM$artist),])
taw <- c("yea", "waht")
taw
taw <- c("huh", taw)
taw
shiny::runApp()
shiny::runApp()
View(pbM)
View(rbM)
setwd("C:/Users/Seth/Documents/bandatablog/Billboard R and B/weekly top albums")
## got data from
## http://www.billboard.com/archive/charts/1985/r-b-hip-hop-albums
# builds weekly number ones list
wno <- list()
rbM <- data.frame()
year <- "1984"
for (i in 1:31) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
wno[[i]] <- read.delim(paste("r and b ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#add year to date and convert to date format
wno[[i]][,1] <- paste(wno[[i]][,1], year)
wno[[i]][,1] <- as.Date(wno[[i]][,1], "%B %d %Y")
#replace blanks for multiple week winners
for (j in 1: nrow(wno[[i]])) {
if(nchar(wno[[i]][j+1,2])==0) {
wno[[i]][j+1,2] <- wno[[i]][j,2]
wno[[i]][j+1,3] <- wno[[i]][j,3]
}
}
rbM <- rbind(rbM, wno[[i]])
}
#write.csv(rbM, "weekly number ones.csv", row.names=F)
names(rbM) <- c("date", "album", "artist")
weeksAlbum <- data.frame(table(rbM[,2]), stringsAsFactors=F)
weeksAlbum <- weeksAlbum[order(weeksAlbum$Freq, decreasing=T),]
weeksAlbum$Var1 <- as.character(weeksAlbum$Var1)
weeksArtist <- data.frame(table(rbM[,3]), stringsAsFactors=F)
weeksArtist <- weeksArtist[order(weeksArtist$Freq, decreasing=T),]
weeksArtist$Var1 <- as.character(weeksArtist$Var1)
#adding album index to match pjM
rbM$index <- rep(0, nrow(rbM))
#a start but misses a lot from spelling, etc.
#for instance (FutureSex):
#View(rbM[grep("Timberlake", rbM$artist),])
#View(pjM[grep("Timberlake", pjM$artist),])
for (i in 1:nrow(rbM)) {
pjPick <- pjM[pjM$year==substring(rbM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(rbM[i,1], 1, 4))-1), ]
#dealing with puncuation idiosynchrosies, DECIDED AGAINST
#pjPick$album <- gsub("'", " ", pjPick$album)
#pjPick$album <- gsub("[^A-Za-z0-9 ]", "", pjPick$album)
#matching, but only lower case
if (nrow(pjPick)>0) {
for (j in 1:nrow(pjPick)) {
if(tolower(rbM[i,2])==tolower(pjPick[j,3])) {
rbM[i,4] <- pjPick[j,8]
}
}
}
}
#View(rbM[rbM$index>0,])
#nrow(rbM[rbM$date>"2008-01-01" & rbM$date<"2014-01-01",])
#looking at all the albums (no duplicates for mulitple weeks on chart)
rbMnd <- rbM[!duplicated(rbM$album),]
setwd("C:/Users/Seth/Documents/bandatablog/data")
write.csv(rbsM, "r and b weekly number ones.csv", row.names=F)
write.csv(rbsMnd, "r and b no duplicates.csv", row.names=F)
setwd("C:/Users/Seth/Documents/bandatablog/shiny2/data")
write.csv(rbsM, "r and b weekly number ones.csv", row.names=F)
write.csv(rbsMnd, "r and b no duplicates.csv", row.names=F)
shiny::runApp('~/bandatablog/shiny2')
VieW(rbM)
View(rbM)
setwd("C:/Users/Seth/Documents/bandatablog/Billboard R and B/weekly top albums")
## got data from
## http://www.billboard.com/archive/charts/1985/r-b-hip-hop-albums
# builds weekly number ones list
wno <- list()
rbM <- data.frame()
year <- "1984"
for (i in 1:31) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
wno[[i]] <- read.delim(paste("r and b ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#add year to date and convert to date format
wno[[i]][,1] <- paste(wno[[i]][,1], year)
wno[[i]][,1] <- as.Date(wno[[i]][,1], "%B %d %Y")
#replace blanks for multiple week winners
for (j in 1: nrow(wno[[i]])) {
if(nchar(wno[[i]][j+1,2])==0) {
wno[[i]][j+1,2] <- wno[[i]][j,2]
wno[[i]][j+1,3] <- wno[[i]][j,3]
}
}
rbM <- rbind(rbM, wno[[i]])
}
#write.csv(rbM, "weekly number ones.csv", row.names=F)
names(rbM) <- c("date", "album", "artist")
weeksAlbum <- data.frame(table(rbM[,2]), stringsAsFactors=F)
weeksAlbum <- weeksAlbum[order(weeksAlbum$Freq, decreasing=T),]
weeksAlbum$Var1 <- as.character(weeksAlbum$Var1)
weeksArtist <- data.frame(table(rbM[,3]), stringsAsFactors=F)
weeksArtist <- weeksArtist[order(weeksArtist$Freq, decreasing=T),]
weeksArtist$Var1 <- as.character(weeksArtist$Var1)
#adding album index to match pjM
rbM$index <- rep(0, nrow(rbM))
#a start but misses a lot from spelling, etc.
#for instance (FutureSex):
#View(rbM[grep("Timberlake", rbM$artist),])
#View(pjM[grep("Timberlake", pjM$artist),])
for (i in 1:nrow(rbM)) {
pjPick <- pjM[pjM$year==substring(rbM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(rbM[i,1], 1, 4))-1), ]
#dealing with puncuation idiosynchrosies, DECIDED AGAINST
#pjPick$album <- gsub("'", " ", pjPick$album)
#pjPick$album <- gsub("[^A-Za-z0-9 ]", "", pjPick$album)
#matching, but only lower case
if (nrow(pjPick)>0) {
for (j in 1:nrow(pjPick)) {
if(tolower(rbM[i,2])==tolower(pjPick[j,3])) {
rbM[i,4] <- pjPick[j,8]
}
}
}
}
#View(rbM[rbM$index>0,])
#nrow(rbM[rbM$date>"2008-01-01" & rbM$date<"2014-01-01",])
#looking at all the albums (no duplicates for mulitple weeks on chart)
rbMnd <- rbM[!duplicated(rbM$album),]
View(rbM)
View(rbsM)
setwd("C:/Users/Seth/Documents/bandatablog/shiny2/")
#pazz and jop
pjM <- read.csv("data/pazz and jop 1974-2014.csv", stringsAsFactors=F)
pjsM <- read.csv("data/pj singles 1979-2014.csv", stringsAsFactors=F)
##ALBUMS
#Billboard 200
wnoM <- read.csv("data/BB200 weekly number ones.csv", stringsAsFactors=F)
wnoM$date <- as.Date(wnoM$date, "%Y-%m-%d")
wnoMnd <- read.csv("data/BB200 no duplicates.csv", stringsAsFactors=F)
wnoMnd$date <- as.Date(wnoMnd$date, "%Y-%m-%d")
#Billboard Country
coM <- read.csv("data/country weekly number ones.csv", stringsAsFactors=F)
coM$date <- as.Date(coM$date, "%Y-%m-%d")
coMnd <- read.csv("data/country no duplicates.csv", stringsAsFactors=F)
coMnd$date <- as.Date(coMnd$date, "%Y-%m-%d")
#Billboard R and B
rbM <- read.csv("data/r and b weekly number ones.csv", stringsAsFactors=F)
rbM$date <- as.Date(rbM$date, "%Y-%m-%d")
rbMnd <- read.csv("data/r and b no duplicates.csv", stringsAsFactors=F)
rbMnd$date <- as.Date(rbMnd$date, "%Y-%m-%d")
##SINGLES
#Hot 100
h1M <- read.csv("data/hot 100 weekly number ones.csv", stringsAsFactors=F)
h1M$date <- as.Date(h1M$date, "%Y-%m-%d")
h1Mnd <- read.csv("data/hot 100 no duplicates.csv", stringsAsFactors=F)
h1Mnd$date <- as.Date(h1Mnd$date, "%Y-%m-%d")
#country singles
cosM <- read.csv("data/country singles weekly number ones.csv", stringsAsFactors=F)
cosM$date <- as.Date(cosM$date, "%Y-%m-%d")
cosMnd <- read.csv("data/country singles no duplicates.csv", stringsAsFactors=F)
cosMnd$date <- as.Date(cosMnd$date, "%Y-%m-%d")
#r and b singles
rbsM <- read.csv("data/r and b singles weekly number ones.csv", stringsAsFactors=F)
rbsM$date <- as.Date(rbsM$date, "%Y-%m-%d")
rbsMnd <- read.csv("data/r and b singles no duplicates.csv", stringsAsFactors=F)
rbsMnd$date <- as.Date(rbsMnd$date, "%Y-%m-%d")
#rock singles
mrsM <- read.csv("data/rock singles weekly number ones.csv", stringsAsFactors=F)
mrsM$date <- as.Date(mrsM$date, "%Y-%m-%d")
mrsMnd <- read.csv("data/rock singles no duplicates.csv", stringsAsFactors=F)
mrsMnd$date <- as.Date(mrsMnd$date, "%Y-%m-%d")
##YEAR STATS
yearStats <- read.csv("data/yearStats.csv", stringsAsFactors=F)
coYearStats <- read.csv("data/coYearStats.csv", stringsAsFactors=F)
rbYearStats <- read.csv("data/rbYearStats.csv", stringsAsFactors=F)
RanGarTayStats <- read.csv("data/RanGarTayStats.csv", stringsAsFactors=F)
h1YearStats <- read.csv("data/h1YearStats.csv", stringsAsFactors=F)
cosYearStats <- read.csv("data/cosYearStats.csv", stringsAsFactors=F)
rbsYearStats <- read.csv("data/rbsYearStats.csv", stringsAsFactors=F)
mrsYearStats <- read.csv("data/mrsYearStats.csv", stringsAsFactors=F)
View(rbM)
setwd("C:/Users/Seth/Documents/bandatablog/Billboard R and B/weekly top albums")
## got data from
## http://www.billboard.com/archive/charts/1985/r-b-hip-hop-albums
# builds weekly number ones list
wno <- list()
rbM <- data.frame()
year <- "1984"
for (i in 1:31) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
wno[[i]] <- read.delim(paste("r and b ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#add year to date and convert to date format
wno[[i]][,1] <- paste(wno[[i]][,1], year)
wno[[i]][,1] <- as.Date(wno[[i]][,1], "%B %d %Y")
#replace blanks for multiple week winners
for (j in 1: nrow(wno[[i]])) {
if(nchar(wno[[i]][j+1,2])==0) {
wno[[i]][j+1,2] <- wno[[i]][j,2]
wno[[i]][j+1,3] <- wno[[i]][j,3]
}
}
rbM <- rbind(rbM, wno[[i]])
}
#write.csv(rbM, "weekly number ones.csv", row.names=F)
names(rbM) <- c("date", "album", "artist")
weeksAlbum <- data.frame(table(rbM[,2]), stringsAsFactors=F)
weeksAlbum <- weeksAlbum[order(weeksAlbum$Freq, decreasing=T),]
weeksAlbum$Var1 <- as.character(weeksAlbum$Var1)
weeksArtist <- data.frame(table(rbM[,3]), stringsAsFactors=F)
weeksArtist <- weeksArtist[order(weeksArtist$Freq, decreasing=T),]
weeksArtist$Var1 <- as.character(weeksArtist$Var1)
#adding album index to match pjM
rbM$index <- rep(0, nrow(rbM))
#a start but misses a lot from spelling, etc.
#for instance (FutureSex):
#View(rbM[grep("Timberlake", rbM$artist),])
#View(pjM[grep("Timberlake", pjM$artist),])
for (i in 1:nrow(rbM)) {
pjPick <- pjM[pjM$year==substring(rbM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(rbM[i,1], 1, 4))-1), ]
#dealing with puncuation idiosynchrosies, DECIDED AGAINST
#pjPick$album <- gsub("'", " ", pjPick$album)
#pjPick$album <- gsub("[^A-Za-z0-9 ]", "", pjPick$album)
#matching, but only lower case
if (nrow(pjPick)>0) {
for (j in 1:nrow(pjPick)) {
if(tolower(rbM[i,2])==tolower(pjPick[j,3])) {
rbM[i,4] <- pjPick[j,8]
}
}
}
}
#View(rbM[rbM$index>0,])
#nrow(rbM[rbM$date>"2008-01-01" & rbM$date<"2014-01-01",])
#looking at all the albums (no duplicates for mulitple weeks on chart)
rbMnd <- rbM[!duplicated(rbM$album),]
View(rbM)
setwd("C:/Users/Seth/Documents/bandatablog/data")
write.csv(rbM, "r and b weekly number ones.csv", row.names=F)
write.csv(rbMnd, "r and b no duplicates.csv", row.names=F)
setwd("C:/Users/Seth/Documents/bandatablog/shiny2/data")
write.csv(rbM, "r and b weekly number ones.csv", row.names=F)
write.csv(rbMnd, "r and b no duplicates.csv", row.names=F)
shiny::runApp('~/bandatablog/shiny2')
View(pjM)
View(pjsM)
shiny::runApp('~/bandatablog/shiny2')
shiny::runApp('~/bandatablog/shiny2')
shiny::runApp('~/bandatablog/shiny2')
shiny::runApp('~/bandatablog/shiny2')
shiny::runApp('~/bandatablog/shiny2')
View(rbsM)
View(rbsM[substr(rbsM$date=="2010"),])
View(rbsM[substr(rbsM$date, 1, 4)=="2010",])
View(rbsM[substr(rbsM$date, 1, 4)=="2009",])
View(rbsM[substr(rbsM$date, 1, 4)=="2011",])
View(pjsM[pjsM$year==2011])
View(pjsM[pjsM$year==2011,])
View(rbsM[grep("*", rbsM$song),])
View(rbsM[grep("\\*", rbsM$song),])
View(pjsM[pjsM$year==2014,])
View(rbsM[substr(rbsM$date, 1, 4)=="2014",])
View(rbsM[grep("\\*", rbsM$song),])
View(rbM[grep("\\*", rbM$album),])
View(pjM[grep("Luda", pjM$artist),])
View(pjM[grep("Eazy", pjM$artist),])
View(pjM[grep("Dre", pjM$artist),])
View(pjM[grep("Ludacris", pjM$artist),])
View(pjsM[grep("Ni**gas", pjsM$song),])
View(pjsM[grep("Ni\\*\\*gas", pjsM$song),])
View(rbsM[grep("Ni\\*\\*gas", rbsM$song),])
View(rbsM[grep("Ni\\*\\*as", rbsM$song),])
rbsM$song <- gsub("Ni\\*\\*as", "Niggas", rbsM$song)
View(rbsM[grep("Ni\\*\\*as", rbsM$song),])
View(rbsM[grep("Niggas", rbsM$song),])
rbsM[grep("F\\*\\*k", rbsM$song),]
rbsM$song <- gsub("F\\*\\*k", "Fuck", rbsM$song)
rbsM[grep("F\\*\\*k", rbsM$song),]
rbsM[grep("Fuck", rbsM$song),]
setwd("C:/Users/Seth/Documents/bandatablog/Billboard R and B/weekly top songs")
## got data from
## http://www.billboard.com/archive/charts/1985/country-songs
# builds weekly number ones list
wno <- list()
rbsM <- data.frame()
year <- "1984"
for (i in 1:31) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
wno[[i]] <- read.delim(paste("r and b songs ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#add year to date and convert to date format
wno[[i]][,1] <- paste(wno[[i]][,1], year)
wno[[i]][,1] <- as.Date(wno[[i]][,1], "%B %d %Y")
#replace blanks for multiple week winners
for (j in 1: nrow(wno[[i]])) {
if(nchar(wno[[i]][j+1,2])==0) {
wno[[i]][j+1,2] <- wno[[i]][j,2]
wno[[i]][j+1,3] <- wno[[i]][j,3]
}
}
rbsM <- rbind(rbsM, wno[[i]])
}
names(rbsM) <- c("date", "song", "artist")
# fix censorship
rbsM$song <- gsub("Ni\\*\\*as", "Niggas", rbsM$song)
rbsM$song <- gsub("F\\*\\*k", "Fuck", rbsM$song)
weeksSong <- data.frame(table(rbsM[,2]), stringsAsFactors=F)
weeksSong <- weeksSong[order(weeksSong$Freq, decreasing=T),]
weeksSong$Var1 <- as.character(weeksSong$Var1)
weeksArtist <- data.frame(table(rbsM[,3]), stringsAsFactors=F)
weeksArtist <- weeksArtist[order(weeksArtist$Freq, decreasing=T),]
weeksArtist$Var1 <- as.character(weeksArtist$Var1)
#adding album index to match pjM
rbsM$index <- rep(0, nrow(rbsM))
#a start but misses a lot from spelling, etc.
#for instance (FutureSex):
#View(rbsM[grep("Timberlake", rbsM$artist),])
#View(pjM[grep("Timberlake", pjM$artist),])
for (i in 1:nrow(rbsM)) {
pjPick <- pjsM[pjsM$year==substring(rbsM[i,1], 1, 4) |
pjsM$year==as.character(as.numeric(substring(rbsM[i,1], 1, 4))-1), ]
#matching, but only lower case
hotsong <- tolower(unlist(strsplit(rbsM[i,2], " \\("))[1])
hotsong <- gsub("[`'-]", " ", hotsong)
hotsong <- gsub("  +", " ", hotsong)
hotsong <- gsub("&", "and", hotsong)
if (nrow(pjPick)>0) {
for (j in 1:nrow(pjPick)) {
song <- tolower(unlist(strsplit(pjPick[j,3], " \\("))[1])
song <- unlist(strsplit(song, "/"))
song <- gsub("[`'-]", " ", song)
song <- gsub("  +", " ", song)
song <- gsub("&", "and", song)
if(length(song)==1) {
if(hotsong==song) {
rbsM[i,4] <- pjPick[j,7]
}
} else if (length(song)==2) {
if(hotsong==song[1]|hotsong==song[2]) {
rbsM[i,4] <- pjPick[j,7]
}
}
}
}
}
#looking at all the albums (no duplicates for mulitple weeks on chart)
rbsMnd <- rbsM[!duplicated(rbsM$song),]
#setwd("C:/Users/Seth/Documents/bandatablog/data")
#write.csv(rbsM, "r and b singles weekly number ones.csv", row.names=F)
#write.csv(rbsMnd, "r and b singles no duplicates.csv", row.names=F)
View(rbsM[grep("Niggas", rbsM$song),])
setwd("C:/Users/Seth/Documents/bandatablog/data")
write.csv(rbsM, "r and b singles weekly number ones.csv", row.names=F)
write.csv(rbsMnd, "r and b singles no duplicates.csv", row.names=F)
setwd("C:/Users/Seth/Documents/bandatablog/shiny2/data")
write.csv(rbsM, "r and b singles weekly number ones.csv", row.names=F)
write.csv(rbsMnd, "r and b singles no duplicates.csv", row.names=F)
shiny::runApp('~/bandatablog/shiny2')
View(rbsM[grep("Niggas", rbsM$song),])
shiny::runApp('~/bandatablog/shiny2')
