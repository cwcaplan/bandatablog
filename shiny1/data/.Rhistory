x <- 1:100000
plot(x,x*log2(x))
lines(x, x)
lines(x, x^2)
lines(x, 5*x^2, col="red")
lines(x, 10*x^2, col="yellow")
lines(x, 5*x, col="green")
lines(x, 10*x, col="blue")
x <- 1:100000
plot(x,x*log2(x))
lines(x, x)
lines(x, x^2)
lines(x, 5*x^2, col="red")
lines(x, 10*x^2, col="yellow")
lines(x, 5*x, col="green")
lines(x, 10*x, col="blue")
lines(x, 100*x, col="purple")
x <- 1:1000000
plot(x,x*log2(x))
lines(x, x)
lines(x, x^2)
lines(x, 5*x^2, col="red")
lines(x, 10*x^2, col="yellow")
lines(x, 5*x, col="green")
lines(x, 10*x, col="blue")
lines(x, 100*x, col="purple")
x <- 1:10000000
plot(x,x*log2(x))
lines(x, x)
lines(x, x^2)
lines(x, 5*x^2, col="red")
lines(x, 10*x^2, col="yellow")
lines(x, 5*x, col="green")
lines(x, 10*x, col="blue")
lines(x, 1000*x, col="purple")
x <- 1:100
plot(x,x*log2(x))
lines(x, x)
lines(x, x^2)
lines(x, 5*x^2, col="red")
lines(x, 10*x^2, col="yellow")
lines(x, 5*x, col="green")
lines(x, 10*x, col="blue")
lines(x, 1000*x, col="purple")
lines(x, 1000*x, col="red")
x <- 1:10
plot(x,x*log2(x))
lines(x, x)
lines(x, x^2)
lines(x, 5*x^2, col="red")
lines(x, 10*x^2, col="yellow")
lines(x, 5*x, col="green")
lines(x, 10*x, col="blue")
lines(x, 1000*x, col="red")
x <- 1:100
plot(x,x*log2(x))
lines(x, x)
lines(x, x^2)
lines(x, 5*x^2, col="red")
lines(x, 10*x^2, col="yellow")
lines(x, 5*x, col="green")
lines(x, 10*x, col="blue")
lines(x, 1000*x, col="red")
x <- 1:100
plot(x,(6*x*log2(x)+6x))
x <- 1:100
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x))
lines(x, x*log2(x))
lines(x, 5*x*log2(x))
x <- 1:100
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 5*x*log2(x), col = "blue")
x <- 1:1000
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 5*x*log2(x), col = "blue")
x <- 1:100
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 5*x*log2(x), col = "blue")
x <- 1:100
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 10*x*log2(x), col = "blue")
x <- 1:10
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 10*x*log2(x), col = "blue")
x <- 1:10
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 4*x*log2(x), col = "blue")
x <- 1:50
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 4*x*log2(x), col = "blue")
x <- 1:50
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 7*x*log2(x), col = "blue")
x <- 1:50
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 6*x*log2(x), col = "blue")
x <- 1:100
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 6*x*log2(x), col = "blue")
x <- 1:200
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 6*x*log2(x), col = "blue")
x <- 1:200
plot(x,(7*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 6*x*log2(x), col = "blue")
x <- 1:200
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 7*x*log2(x), col = "blue")
x <- 1:50
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 7*x*log2(x), col = "blue")
x <- 1:100
plot(x,(6*x*log2(x)+6*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 7*x*log2(x), col = "blue")
x <- 1:100
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 12*x*log2(x), col = "blue")
x <- 1:1000
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 12*x*log2(x), col = "blue")
x <- 1:10
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 12*x*log2(x), col = "blue")
x <- 1:10000
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 12*x*log2(x), col = "blue")
x <- 1:100000
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 12*x*log2(x), col = "blue")
x <- 1:100000
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 100*x*log2(x), col = "blue")
x <- 1:1000
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 100*x*log2(x), col = "blue")
x <- 1:1000
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 20*x*log2(x), col = "blue")
x <- 1:1000
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 30*x*log2(x), col = "blue")
x <- 1:100
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 30*x*log2(x), col = "blue")
x <- 1:100
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 25*x*log2(x), col = "blue")
x <- 1:200
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 25*x*log2(x), col = "blue")
x <- 1:200
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 25*x*log2(x), col = "blue")
x <- 1:20
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 25*x*log2(x), col = "blue")
x <- 1:200
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 25*x*log2(x), col = "blue")
points(100,2000)
x <- 1:200
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 25*x*log2(x), col = "blue")
log2(50)
5.643856^2
2^5.643856
100/14
2^7.142857
x <- 141.3234
11*x*log2(x)+100*x
25*x*log2(x)
x <- 1:200
plot(x,(11*x*log2(x)+100*x))
lines(x, log2(x), col = "yellow")
lines(x, x*log2(x), col = "red")
lines(x, 25*x*log2(x), col = "blue")
points(141.3234,25236.32)
points(141.3234,25236.32, col="red")
points(141.3234,25236.32, col="red", pch=15)
x <- 1:200
plot(x, x^2)
lines(x, 10*x^2)
lines(x, x^3, col="blue")
lines(x, 100*x^2)
plot(x, x^3)
lines(x, 100*x^2, col="blue")
plot(x, 45*x^2 + 23*x)
lines(x, 200*x^2, col="blue")
x<- 1:20
plot(x, 45*x^2 + 23*x)
lines(x, 200*x^2, col="blue")
x<- 1:20
plot(x, 45*x^2 + 23*x)
lines(x, 20*x^2, col="blue")
x<- 1:20
plot(x, 45*x^2 + 23*x)
lines(x, 50*x^2, col="blue")
x<- 1:10
plot(x, 45*x^2 + 23*x)
lines(x, 50*x^2, col="blue")
4^2
23*4
45*16 + 92
50+16
50*16
x<- 1:10
plot(x, 20*x^2 + 23*x)
lines(x, 21*x^2, col="blue")
x<- 1:30
plot(x, 20*x^2 + 23*x)
lines(x, 21*x^2, col="blue")
20^2
23*20
20*400
8000+460
21^2
441*21
23*21
20*441
8820+483
20.5^2
20*20.5^2 + 23*20.5
20*21^2 + 23*21
x<- 1:30
plot(x, 20*x^2 + 23*x)
lines(x, 21*x^2, col="blue")
points(21, 9303, col="red", pch=14)
x<- 1:30
plot(x, 2000*x^2 + 23000*x)
x<- 1:3000
plot(x, 2000*x^2 + 23000*x)
x<- 1:3000
plot(x, 2000*x^2 + 23000*x)
lines(x, 2100*x^2, col="blue")
x<- 1:3000
plot(x, 2000*x^2 + 23000*x)
lines(x, 210*x^2, col="blue")
plot(x, 2000*x^2 + 23000*x)
lines(x, 2100*x^2, col="blue")
x<- 1:30000
plot(x, 2000*x^2 + 23000*x)
lines(x, 2100*x^2, col="blue")
x<- 1:60000
plot(x, 2000*x^2 + 23000*x)
lines(x, 2100*x^2, col="blue")
x<- 1:120000
plot(x, 2000*x^2 + 23000*x)
lines(x, 2100*x^2, col="blue")
x<- 1:120000
plot(x, 2000*x^2 + 23000*x)
lines(x, 2200*x^2, col="blue")
e
exp(1)
e <- exp(1)
e
-2
-e
-e^(-10/5)
-e^(-10000/5)
-e^(-100000000/5)
-e^(-.3/5)
-e^(-6/5)
e^(-6/5)
-e^-6/5
?integrate
integrate(x, 0, 1)
func <- function(x) {x}
func(4)
integrate(func, 0, 1)
func <- function(x) {x^2}
func(4)
integrate(func, 0, 1)
func <- function(t) {e^(-t/5) / 5}
integrate(func, 6, Inf)
func <- function(t) {(e^(-t/5))/ 5}
integrate(func, 6, Inf)
10^-5
10^-2
10/100
10^2
10/.01
10^.1
1/100
func <- function(t) {(1/e^.2*t)/5}
func(5)
func(1000)
e^.2*5
6*.2
e^1.2
?exp
e <- exp(1)
e
func <- function(t) {(e^(-t/5))/ 5}
integrate(func, 6, Inf)
func(6)
func <- function(t) {e^(-t/5)/ 5}
integrate(func, 6, Inf)
func <- function(x) {.5*exp(-x/2)}
integrate(func, 0, Inf)
?qexp
func(4)
shiny::runApp('~/bandatablog/shiny1')
setwd("C:/Users/Seth/Documents/bandatablog/Billboard Country/weekly top albums")
## got data from
## http://www.billboard.com/archive/charts/1985/country-albums
# builds weekly number ones list
wno <- list()
coM <- data.frame()
year <- "1984"
for (i in 1:31) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
wno[[i]] <- read.delim(paste("country albums ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#add year to date and convert to date format
wno[[i]][,1] <- paste(wno[[i]][,1], year)
wno[[i]][,1] <- as.Date(wno[[i]][,1], "%B %d %Y")
#replace blanks for multiple week winners
for (j in 1: nrow(wno[[i]])) {
if(nchar(wno[[i]][j+1,2])==0) {
wno[[i]][j+1,2] <- wno[[i]][j,2]
wno[[i]][j+1,3] <- wno[[i]][j,3]
}
}
coM <- rbind(coM, wno[[i]])
}
#write.csv(coM, "weekly number ones.csv", row.names=F)
names(coM) <- c("date", "album", "artist")
weeksAlbum <- data.frame(table(coM[,2]), stringsAsFactors=F)
weeksAlbum <- weeksAlbum[order(weeksAlbum$Freq, decreasing=T),]
weeksAlbum$Var1 <- as.character(weeksAlbum$Var1)
weeksArtist <- data.frame(table(coM[,3]), stringsAsFactors=F)
weeksArtist <- weeksArtist[order(weeksArtist$Freq, decreasing=T),]
weeksArtist$Var1 <- as.character(weeksArtist$Var1)
#adding album index to match pjM
coM$index <- rep(0, nrow(coM))
#a start but misses a lot from spelling, etc.
#for instance (FutureSex):
#View(coM[grep("Timberlake", coM$artist),])
#View(pjM[grep("Timberlake", pjM$artist),])
for (i in 1:nrow(coM)) {
pjPick <- pjM[pjM$year==substring(coM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(coM[i,1], 1, 4))-1), ]
#dealing with puncuation idiosynchrosies, DECIDED AGAINST
#pjPick$album <- gsub("'", " ", pjPick$album)
#pjPick$album <- gsub("[^A-Za-z0-9 ]", "", pjPick$album)
#matching, but only lower case
if (nrow(pjPick)>0) {
for (j in 1:nrow(pjPick)) {
if(tolower(coM[i,2])==tolower(pjPick[j,3])) {
coM[i,4] <- pjPick[j,8]
}
}
}
}
#View(coM[coM$index>0,])
#nrow(coM[coM$date>"2008-01-01" & coM$date<"2014-01-01",])
#looking at all the albums (no duplicates for mulitple weeks on chart)
coMnd <- coM[!duplicated(coM$album),]
#dealing with out (the ones that didn't match)
coMout <- coMnd[coMnd$index==0,]
## looks for a match in in Pazz and Jop for an artist or album within a three year window
looker <- function(name, years) {
pjPick <- pjM[pjM$year==years |
pjM$year==as.character(as.numeric(years)-1)
| pjM$year==as.character(as.numeric(years)+1), ]
#get rid of regex bombs, split words, and expunge stop words
names <- gsub("[^A-Za-z0-9 ]", "", name)
#names <- gsub("[\\(\\)\\*\\$\\+\\?'\\[\\]]", "", name)
names <- unlist(strsplit(names, " "))
names <- names[!grepl("^[Aa]$|^[Oo]f$|^[Ii]n$|^[Tt]he$|
^[Aa]t$|^[Ii]$|^[Ii]t$|^[Tt]o$|^&$", names)]
#names <- names[!grepl["in"]]
picks <- data.frame()
for (i in 1:length(names)){
artists <- pjPick[grep(tolower(names[i]), tolower(pjPick$artist)),]
albums <- pjPick[grep(tolower(names[i]), tolower(pjPick$album)),]
picks <- rbind(picks, artists, albums)
}
picks
}
# gives you potential options to scroll through for coMout
checkOpts <- function(chart) {
optsData <- data.frame()
tempOpts <- data.frame()
for (i in 1:nrow(chart)) {
options <- looker(paste(chart[i,2], chart[i,3]),
substring(chart[i,1], 1, 4))
options <- cbind(rep(substring(chart[i,1], 1, 4), nrow(options)),
rep(paste(chart[i,3], chart[i,2], sep = ": "), nrow(options)),
options[,c(3,2,8)], stringsAsFactors=F)
names(options) <- c("year", "wno", "PJalbum", "PJartist", "index")
optsData <- rbind(optsData, options)
}
optsData
}
coLookAtEm <- checkOpts(coMout)
#double check with things like:
#View(pjM[grep("Prince", pjM$artist),])
#View(pjM[grep("True", pjM$album),])
#now look through and match manually (there must be another way, right?)
# uses the rbLookAtEm index (108 in the sample) to look up the right
# entry in coM and then replaces the index column with whatever (436 in the sample)
#   sample:
#   coM[coM$album==unlist(strsplit(rbLookAtEm[108,2], ": "))[2],4] <- 436
VieW(coM)
View(coM)
View(coM[grep("Always", coM$album),])
coM[grep("Always", coM$album),2] <- "Always & Forever"
View(coM[grep("Always", coM$album),])
setwd("C:/Users/Seth/Documents/bandatablog/data")
write.csv(coM, "country weekly number ones.csv", row.names=F)
write.csv(coMnd, "country no duplicates.csv", row.names=F)
shiny::runApp('~/bandatablog/shiny1')
View(coM[coM$artist=="Randy Travis",])
View(coM[grep("Randy Travis", coM$artist),])
View(coM[grep("Taylor Swift", coM$artist),])
View(coM[grep("Garth Brooks", coM$artist),])
year <- "2013"
coMy <- coM[substring(coMnd$date, 1, 4)==year]
coMy <- coM[substring(coM$date, 1, 4)==year]
coMy <- coM[substring(coM$date, 1, 4)==year,]
View(coMy)
nrow(coMy[grep("TaylorSwift", coMy$artist),])
nrow(coMy[grep("Taylor Swift", coMy$artist),])
length(grep("Taylor Swift", coMy$artist))
length(grep("Taylor Swift", coMy$artist)) /52
round(length(grep("Taylor Swift", coMy$artist)) / 52, 1)
round(length(grep("Taylor Swift", coMy$artist)) / 52, 3)
year <- "1983"
RanGarTayStats <- data.frame()
for (i in 1:31) {
year <- (as.character(as.numeric(year)+1))
coMy <- coM[substring(coM$date, 1, 4)==year,]
RanGarTayStats[i,1] <- year
RanGarTayStats[i,2] <- round(length(grep("Randy Travis", coMy$artist)) / 52, 3)
RanGarTayStats[i,3] <- round(length(grep("Garth Brooks", coMy$artist)) / 52, 3)
RanGarTayStats[i,4] <- round(length(grep("Taylor Swift", coMy$artist)) / 52, 3)
}
RanGarTayStats[1,2:6] <- NA
names(RanGarTayStats) <- c("year", "Randy", "Garth", "Taylor")
RanGarTayStats[1,2:4] <- NA
names(RanGarTayStats) <- c("year", "Randy", "Garth", "Taylor")
View(RayGarTayStats)
View(RanGarTayStats)
shiny::runApp('~/bandatablog/shiny1')
shiny::runApp('~/bandatablog/shiny1')
shiny::runApp('~/bandatablog/shiny1')
