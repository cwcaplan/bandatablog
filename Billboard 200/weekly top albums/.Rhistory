albums <- character()
for (i in 1:nrow(pjM)) {
if(grepl(":", pjM[i,2])) {
info <- unlist(strsplit(pjM[i,2], ": "))
pjM[i,2] <- info[1]
albums[i] <- info[2]
} else {
albums[i] <- pjM[i,2]
}
}
pjM <- data.frame(rank=pjM$V1,
artist=pjM$V2,
album=albums,
points=pjM$V3,
mentions=pjM$V4,
year=pjM$year,
stringsAsFactors=F)
#make rank numeric
pjM$rank <- as.numeric(pjM$rank)
#get rid of label
for (i in 1:nrow(pjM)) {
pjM$album[i] <- unlist(strsplit(pjM$album[i], " \\("))[1]
pjM$label[i] <- unlist(strsplit(pjM$album[i], " \\("))[2]
}
View(pjM)
setwd("C:/Users/Seth/Documents/bandatablog/Pazz and Jop")
#year <- as.character(as.numeric(year)+1)
#year <- "1994"
#load data
#pj <- read.delim(paste("pazz and jop ", year, ".txt", sep=""),
#                       header=F, stringsAsFactors=F)
pj <- list()
pjM <- data.frame()
year <- "1973"
for (i in 1:34) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
pj[[i]] <- read.delim(paste("pazz and jop ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#deal with asterisks
pj[[i]] <- pj[[i]][,1:4]
#add year
pj[[i]]$year <- year
pjM <- rbind(pjM, pj[[i]])
}
#write.csv(wnoM, "weekly number ones.csv", row.names=F)
#for (i in 1:length(pj)) {
#    pjM <- rbind(pjM, pj[[i]])
#}
#get rid of rogue asterisks
pjM <- pjM[!pjM$V1=="*", ]
pjM <- pjM[!pjM$V1=="**", ]
#fix rows that we screwed up by asterisks
for (i in 1:nrow(pjM)) {
if(grepl("^[^0-9+\\.]", pjM[i,1])) {
pjM[i,4] <- pjM[i,3]
pjM[i,3] <- pjM[i,2]
pjM[i,2] <- pjM[i,1]
pjM[i,1] <- as.character(as.numeric(pjM[i-1,1])+1)
}
}
#split artist and album columns
albums <- character()
for (i in 1:nrow(pjM)) {
if(grepl(":", pjM[i,2])) {
info <- unlist(strsplit(pjM[i,2], ": "))
pjM[i,2] <- info[1]
albums[i] <- info[2]
} else {
albums[i] <- pjM[i,2]
}
}
pjM <- data.frame(rank=pjM$V1,
artist=pjM$V2,
album=albums,
points=pjM$V3,
mentions=pjM$V4,
year=pjM$year,
stringsAsFactors=F)
#make rank numeric
pjM$rank <- as.numeric(pjM$rank)
#get rid of label
for (i in 1:nrow(pjM)) {
pjM$label[i] <- unlist(strsplit(pjM$album[i], " \\("))[2]
pjM$album[i] <- unlist(strsplit(pjM$album[i], " \\("))[1]
}
View(pjM)
?gsub
pjM$label <- gsub("\\)", "", pjM$label)
View(pjM)
View(table(pjM$label))
pjC <- data.frame()
for (i in 1:nrow(wnoM)) {
pjPick <- pjM[pjM$artist==wnoM[i,3], ]
pjC <- rbind(pjC, pjPick)
}
pjC <- pjC[order(pjC$year),]
View(pjC)
?substring
substring(wnoM[1,1], 1, 4)
pjC <- data.frame()
for (i in 1:nrow(wnoM)) {
pjPick <- pjM[pjM$artist==wnoM[i,3] & pjM$year==substring(wnoM[i,1], 1, 4), ]
pjC <- rbind(pjC, pjPick)
}
pjC <- pjC[order(pjC$year),]
View(pjC)
View(pjC[!duplicated(pjC$album),])
View(wnoM[wnoM$date>"2003-01-01",])
oh3 <- wnoM[wnoM$date>"2003-01-01" & wnoM$date<"2004-01-01",]
View(oh3)
oh3pj <- pjM[pjM$year=="2003",]
View(oh3pj)
View(pjC)
View(pjM[grep("Norah", pjM$artist),])
View(wnoM[grep("Norah", wnoM$artist),])
View(wnoM[!duplicated(wnoM$album),])
View(pjM[grep("Bruce", pjM$artist),])
wnoM[1,1]
pjPick <- pjM[pjM$year==substring(wnoM[1,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[1,1], 1, 4))-1, ]
pjPick <- pjM[pjM$year==substring(wnoM[1,1], 1, 4) | pjM$year==as.character(as.numeric(substring(wnoM[1,1], 1, 4))-1, ]
pjPick <- pjM[pjM$year==substring(wnoM[1,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[1,1], 1, 4))-1), ]
View(pjPick)
wnoM[1,]
wnoM[1,3]
unlist(strsplit(wnoM[1,3]))
unlist(strsplit(wnoM[1,3], " "))
max(unlist(strsplit(wnoM[1,3], " ")))
nchar(unlist(strsplit(wnoM[1,3], " ")))
max(nchar(unlist(strsplit(wnoM[1,3], " "))))
unlist(strsplit(wnoM[1,3], " "))
unlist(strsplit(wnoM[1,3], " "))[order(unlist(strsplit(wnoM[1,3], " ")))]
unlist(strsplit(wnoM[1,3], " "))[order(unlist(strsplit(wnoM[1,3], " ")))][1]
artist <- wnoM[1,3]
artist
unlist(strsplit(artist, " "))
artist <- unlist(strsplit(artist, " "))
artist
artist[order(arist)]
artist[order(artist)]
artist[order(artist)][1]
artistbig <- artist[order(artist)][1]
artistbig
View(pjPick[grep(artistbig, pjPick$artist),])
artistlist <- character()
for (i in 1:nrow(wnoM)) {
#pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
#            pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
artist <- unlist(strsplit(wnoM[i,3], " "))
artistbig <- artist[order(artist)][1]
artistlist[i] <- aristbig
#pjPick <- pjM[pjM$artist==wnoM[i,3] & pjM$year==substring(wnoM[i,1], 1, 4), ]
#pjC <- rbind(pjC, pjPick)
}
artistlist <- character()
for (i in 1:nrow(wnoM)) {
#pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
#            pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
artist <- unlist(strsplit(wnoM[i,3], " "))
artistbig <- artist[order(artist)][1]
artistlist[i] <- artistbig
#pjPick <- pjM[pjM$artist==wnoM[i,3] & pjM$year==substring(wnoM[i,1], 1, 4), ]
#pjC <- rbind(pjC, pjPick)
}
View(artistlist)
artist <- unlist(strsplit(wnoM[35,3], " "))
artist
artistbig <- artist[order(artist)]
artistbig
artistbig <- artist[order(nchar(artist))]
artistbig
nchar(artist)
artistbig <- artist[order(nchar(artist), artist)]
artistbig
artistbig <- artist[order(nchar(artist), artist, decreasing=T)]
artistbig
?order
artistbig <- artist[order(nchar(artist), decreasing=T)]
artistbig
artist <- wnoM[1,3]
artist
artistbig <- artist[order(nchar(artist), decreasing=T)]
artistbig
artist <- unlist(strsplit(wnoM[1,3], " "))
artist
artistbig <- artist[order(nchar(artist), decreasing=T)]
artistbig
artistlist <- character()
for (i in 1:nrow(wnoM)) {
#pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
#            pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
artist <- unlist(strsplit(wnoM[i,3], " "))
artistbig <- artist[order(nchar(artist), decreasing=T)][1]
artistlist[i] <- artistbig
#pjPick <- pjM[pjM$artist==wnoM[i,3] & pjM$year==substring(wnoM[i,1], 1, 4), ]
#pjC <- rbind(pjC, pjPick)
}
View(artistlist)
duplicated(pjM$album)
View(pjM[duplicated(pjM$album),])
?seq
seq(1, 5)
pjM$index <- seq(1, nrow(pjM))
View(pjM)
seq(1, 5)
View(pjM[duplicated(pjM$album),])
dups <- pjM[duplicated(pjM$album),]
dupsalb <- dups$album
dupsalb
pjM[pjM$album==dupsalb[1],]
pjM[202,7]
pjM[202,8]
pjM[202,8] <- pjM[108,8]
pjM[pjM$album==dupsalb[1],]
pjM[pjM$album==dupsalb[2],]
pjM[pjM$album==dupsalb[3],]
pjM[pjM$album==dupsalb[4],]
pjM[pjM$album==dupsalb[5],]
pjM[pjM$album==dupsalb[6],]
pjM[pjM$album==dupsalb[7],]
pjM[pjM$album==dupsalb[8],]
pjM[pjM$album==dupsalb[9],]
pjM[pjM$album==dupsalb[10],]
pjM[pjM$album==dupsalb[11],]
pjM[pjM$album==dupsalb[12],]
pjM[pjM$album==dupsalb[13],]
pjM[pjM$album==dupsalb[14],]
pjM[pjM$album==dupsalb[15],]
pjM[pjM$album==dupsalb[16],]
pjM[pjM$album==dupsalb[17],]
nrow(dupsalb)
length(dupsalb)
pjM[pjM$album==dupsalb[14:16],]
pjM[202,8] <- pjM[108,8]
pjM[204,8] <- pjM[169,8]
pjM[294,8] <- pjM[271,8]
pjM[313,8] <- pjM[286,8]
pjM[326,8] <- pjM[300,8]
pjM[337,8] <- pjM[277,8]
pjM[446,8] <- pjM[417,8]
pjM[454,8] <- pjM[432,8]
pjM[481,8] <- pjM[465,8]
pjM[534,8] <- pjM[504,8]
pjM[606,8] <- pjM[575,8]
pjM[1021,8] <- pjM[990,8]
pjM[1288,8] <- pjM[1269,8]
View(wnoM)
wnoM$index <- numeric()
wnoM$index <- numeric(0)
wnoM$index <- numeric(rep(0, nrow(wnoM)))
?rep
nrow(wnoM)
head(rep(0, nrow(wnoM)))
wnoM$index <- rep(0, nrow(wnoM))
View(wnoM)
pjPick <- pjM[pjM$year==substring(wnoM[1,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[1,1], 1, 4))-1), ]
View(pjPick)
ncol(wnoM)
for (i in nrow(wnoM)) {
pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
for (j in 1:nrow(pjPick)) {
if(wnoM[i,2]==pjPick[j,3]) {
wnoM[i,4] <- pjPick[j,8]
}
}
}
wnoM[1,2]=pjPick[1,3]
View(wnoM)
pjPick[1,3]
View(pjPick)
pjPick <- pjM[pjM$year==substring(wnoM[1,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[1,1], 1, 4))-1), ]
View(pjPick)
View(wnoM)
wnoM[1,2] <- wnoM[2,2]
View(wnoM)
wnoM[1,2]==pjPick[1,3]
for (i in nrow(wnoM)) {
pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
for (j in 1:nrow(pjPick)) {
if(wnoM[i,2]==pjPick[j,3]) {
wnoM[i,4] <- pjPick[j,8]
}
}
}
pjPick[4,3]
View(pjPick)
for (i in nrow(wnoM)) {
pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
if (nrow(pjPick>0)) {
for (j in 1:nrow(pjPick)) {
if(wnoM[i,2]==pjPick[j,3]) {
wnoM[i,4] <- pjPick[j,8]
}
}
}
}
for (i in 1:nrow(wnoM)) {
for (j in 1:nrow(pjM)) {
if(wnoM[i,2] == pjM[j,3]) {
wnoM[i,4] <- pjM[j,8]
}
}
}
View(wnoM)
View(pjM[pjM$artist=="Dire Straits",])
View(pjM[pjM$album=="Brothers In Arms",])
View(pjM[pjM$artist=="Dire Straits",])
View(pjM[pjM$album=="Brothers in Arms",])
tail(wnoM)
tail(wnoM[wnoM$date<"2007-01-01",])
tail(wnoM[wnoM$date<"2008-01-01",])
nrow(wnoM[wnoM$date<"2008-01-01",])
for (i in nrow(wnoM[wnoM$date<"2008-01-01",])) {
pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
if (nrow(pjPick>0)) {
for (j in 1:nrow(pjPick)) {
if(wnoM[i,2]==pjPick[j,3]) {
wnoM[i,4] <- pjPick[j,8]
}
}
}
}
View(wnoM)
tolower(wnoM[1,2])
toupper(wnoM[1,2])
born <- "Born In The U.S.A."
born
gsub("[^A-Za-z0-9]", "", born)
born <- "Born In The U.S.A."
born
gsub("[^A-Za-z0-9 ]", "", born)
dont <- "Don't stop believin"
dont
gsub("'", " ", dont)
for (i in nrow(wnoM[wnoM$date<"2008-01-01",])) {
pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
#dealing with puncuation idiosynchrosies
pjPick$album <- gsub("'", " ", pjPick$album)
pjPick$album <- gsub("[^A-Za-z0-9 ]", "", pjPick$album)
#matching, but only lower case
if (nrow(pjPick>0)) {
for (j in 1:nrow(pjPick)) {
if(tolower(wnoM[i,2])==tolower(pjPick[j,3])) {
wnoM[i,4] <- pjPick[j,8]
}
}
}
}
View(wnoM)
tolower(wnoM[63,2])
for (i in nrow(wnoM[wnoM$date<"2008-01-01",])) {
pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
#dealing with puncuation idiosynchrosies
#pjPick$album <- gsub("'", " ", pjPick$album)
#pjPick$album <- gsub("[^A-Za-z0-9 ]", "", pjPick$album)
#matching, but only lower case
if (nrow(pjPick>0)) {
for (j in 1:nrow(pjPick)) {
if(tolower(wnoM[i,2])==tolower(pjPick[j,3])) {
wnoM[i,4] <- pjPick[j,8]
}
}
}
}
View(wnoM)
tolower(wnoM[63,2])
tolower(pjM[353,3])
tolower(wnoM[63,2])==tolower(pjM[353,3])
pjPick <- pjM[pjM$year==substring(wnoM[62,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[62,1], 1, 4))-1), ]
View(pjPick)
nrow(pjPick>0)
nrow(pjPick)>0
for (i in nrow(wnoM[wnoM$date<"2008-01-01",])) {
pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
#dealing with puncuation idiosynchrosies
#pjPick$album <- gsub("'", " ", pjPick$album)
#pjPick$album <- gsub("[^A-Za-z0-9 ]", "", pjPick$album)
#matching, but only lower case
if (nrow(pjPick)>0) {
for (j in 1:nrow(pjPick)) {
if(tolower(wnoM[i,2])==tolower(pjPick[j,3])) {
wnoM[i,4] <- pjPick[j,8]
}
}
}
}
View(wnoM)
View(pjPick)
pjPick <- pjM[pjM$year==substring(wnoM[62,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[62,1], 1, 4))-1), ]
View(pjPick)
nrow(pjPick)>0
tolower(wnoM[62,2])==tolower(pjPick[1,3])
pjPick[1,3]
tolower(pjPick[1,3])
tolower(wnoM[62,2])
tolower(wnoM[63,2])
tolower(wnoM[63,2])==tolower(pjPick[1,3])
setwd("C:/Users/Seth/Documents/bandatablog/Billboard 200/weekly top albums")
# builds weekly number ones list
wno <- list()
wnoM <- data.frame()
year <- "1982"
for (i in 1:33) {
#set year
year <- as.character(as.numeric(year)+1)
#load data
wno[[i]] <- read.delim(paste("weekly top albums ", year, ".txt", sep=""),
header=F, stringsAsFactors=F)
#add year to date and convert to date format
wno[[i]][,1] <- paste(wno[[i]][,1], year)
wno[[i]][,1] <- as.Date(wno[[i]][,1], "%B %d %Y")
#replace blanks for multiple week winners
for (j in 1: nrow(wno[[i]])) {
if(nchar(wno[[i]][j+1,2])==0) {
wno[[i]][j+1,2] <- wno[[i]][j,2]
wno[[i]][j+1,3] <- wno[[i]][j,3]
}
}
wnoM <- rbind(wnoM, wno[[i]])
}
#write.csv(wnoM, "weekly number ones.csv", row.names=F)
names(wnoM) <- c("date", "album", "artist")
weeksAlbum <- data.frame(table(wnoM[,2]), stringsAsFactors=F)
weeksAlbum <- weeksAlbum[order(weeksAlbum$Freq, decreasing=T),]
weeksAlbum$Var1 <- as.character(weeksAlbum$Var1)
weeksArtist <- data.frame(table(wnoM[,3]), stringsAsFactors=F)
weeksArtist <- weeksArtist[order(weeksArtist$Freq, decreasing=T),]
weeksArtist$Var1 <- as.character(weeksArtist$Var1)
#adding album index to match pjM
wnoM$index <- rep(0, nrow(wnoM))
View(wnoM)
for (i in nrow(wnoM[wnoM$date<"2008-01-01",])) {
pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
#dealing with puncuation idiosynchrosies
#pjPick$album <- gsub("'", " ", pjPick$album)
#pjPick$album <- gsub("[^A-Za-z0-9 ]", "", pjPick$album)
#matching, but only lower case
if (nrow(pjPick)>0) {
for (j in 1:nrow(pjPick)) {
if(tolower(wnoM[i,2])==tolower(pjPick[j,3])) {
wnoM[i,4] <- pjPick[j,8]
}
}
}
}
View(wnoM)
tolower(wnoM[63,2])==tolower(pjPick[353,3])
pjPick <- pjM[pjM$year==substring(wnoM[63,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[63,1], 1, 4))-1), ]
View(pjPick)
tolower(wnoM[63,2])==tolower(pjPick[1,3])
tolower(wnoM[63,2])==tolower(pjPick[2,3])
pjPick[1,8]
wnoM[63,4]
View(wnoM[!duplicated(wnoM$album),])
for (i in 1:nrow(wnoM[wnoM$date<"2008-01-01",])) {
pjPick <- pjM[pjM$year==substring(wnoM[i,1], 1, 4) |
pjM$year==as.character(as.numeric(substring(wnoM[i,1], 1, 4))-1), ]
#dealing with puncuation idiosynchrosies
#pjPick$album <- gsub("'", " ", pjPick$album)
#pjPick$album <- gsub("[^A-Za-z0-9 ]", "", pjPick$album)
#matching, but only lower case
if (nrow(pjPick)>0) {
for (j in 1:nrow(pjPick)) {
if(tolower(wnoM[i,2])==tolower(pjPick[j,3])) {
wnoM[i,4] <- pjPick[j,8]
}
}
}
}
View(wnoM[!duplicated(wnoM$album),])
head(table(wnoM$index))
head(table(wnoM[!duplicated(wnoM$album),]))
head(table(wnoM[!duplicated(wnoM$album),4]))
wnoMND <- wnoM[!duplicated(wnoM$album),]
View(wnoMND)
out <- wnoMND[wnoMND$index==0,]
View(out)
looker <- function(name, year) {
pjPick <- pjM[pjM$year==year | pjM$year==as.character(as.numeric(year)-1)]
artists <- pjPicks[grep(name, pjPick$artist, fixed=F),]
albums <- pjPicks[grep(name), pjPick$album, fixed=F),]
picks <- rbind(artist, albums)
picks
}
year
name
time
years
looker <- function(name, years) {
pjPick <- pjM[pjM$year==years | pjM$year==as.character(as.numeric(years)-1)]
artists <- pjPicks[grep(name, pjPick$artist, fixed=F),]
albums <- pjPicks[grep(name), pjPick$album, fixed=F),]
picks <- rbind(artist, albums)
picks
}
looker
